@inject IGithubService GithubService

<div class="repo container text-center">
    <div class="row arrow mb-3 p-4 shadow-lg"><span
            class="oi oi-arrow-left" aria-hidden="true" @onclick="@(e => { if (marker >= 2) Previous(); })"></span></div>
    <div class="row">
        @foreach (var repo in GithubService.Repos)
        {
            <div class="card border-dark mb-3 mr-3 shadow-lg p-4 bg-white rounded" style="width: 18rem;">
                @* <img src="@repo.Logo" class="card-img-top" alt="@repo.Name"> *@
                <div class="card-body text-center">
                    <h5 class="card-title">@repo.Name</h5>
                    <p class="card-text">@repo.Description</p>
                </div>
                <a href="@repo.Svn_url" target="_blank" rel="nonopener" class="card-footer">Take a look...</a>
            </div>
        }
    </div>
    <div class="row arrow mb-3 p-4 shadow-lg"><span
            class="oi oi-arrow-right" aria-hidden="true" @onclick="@(e => {if(GithubService.Repos.Count != 6) Next(); })"></span></div>
</div>

@code {
    private List<Repos> repos = new List<Repos>();
    private int marker = 1;

    protected override async Task OnInitializedAsync()
    {
        await GithubService.LoadRepos(marker);
        GithubService.OnChange += StateHasChanged;
    }

    private async Task Next()
    {
        marker += 1;
        await GithubService.LoadRepos(marker);
    }

    private async Task Previous()
    {
        marker -= 1;
        await GithubService.LoadRepos(marker);
    }

    public void Dispose()
    {
        GithubService.OnChange -= StateHasChanged;
    }
}
